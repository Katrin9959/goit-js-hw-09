{"mappings":"oeAGA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAUC,SAASC,cAAc,SAwBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAM,C,SAAEF,E,MAAUC,GAClBE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQL,GAGRM,EAAON,EAAI,GAEZD,EAAM,G,CAlCbL,EAAQc,iBAAiB,UAGzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOlB,EAAQK,MAAMc,OAEjC,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAQqB,OAAOF,MAAOC,GAAK,EAC9CjB,EAAciB,EAAGH,GACdK,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAyB,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAyB,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAEhEY,GAASC,OAAOlB,EAAQ2B,KAAKR,M","sources":["src/js/03-promises.js"],"sourcesContent":["\n\n// Import library\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Get form element\nconst formRef = document.querySelector('.form');\n\n// Set event listener submit on form\nformRef.addEventListener('submit', onSubmitForm);\n\n// Submit form\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(formRef.delay.value);\n\n  for (let i = 1; i <= formRef.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(formRef.step.value);\n  }\n}\n\n// Create promise\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(obj);\n      } else {\n        // Reject\n        reject(obj);\n      }\n    }, delay);\n  });\n}\n\n\n\n\n\n\n\n\n\n// const API_KEY = '7391ec9459644ca0a76cb25df2a23597'\n// const BASE_URL = 'https://newsapi.org/v2'\n// const main = document.querySelector('.main')\n// const list = document.querySelector('ul')\n// const btnGet = document.createElement('button')\n// btnGet.textContent = 'Get news'\n// main.prepend(btnGet)\n//   btnGet.addEventListener('click',() => {\n//   getNewsByCountry(select.value)\n//   })\n// const countries = ['us', 'us', 'pl']\n// const select = document.createElement('select')\n// const options = countries.reduce((acc,el)=> \n//   acc + '<option value=${el}> s{el}</option>',''\n// )\n\n// fetch('${BASE_URL}/top-headlines??country = us&apiKey=${API_KEY}').then((response) => response.json()).then((news) => createNewsList(news.articles)).catch((error) => console.log(error))\n\n\n// const createElLi =({author, content, description, url,urlToImage,title}) => \n// <li>\n\n//   <p>${author || 'Anonymous'}</p>\n//   <img srs=${urlToImage}  width='300'>\n// <a href=${url} > Go to current news\n// </a>\n// ${content ? '<p>${content}</p>' : ''}\n// <p>${description}</p>\n//   </li>\n\n//   const createNewsList = (array)=>\n//    list.innerHTML = ''\n//     list.insertAdjacentHTML(\"afterbegin\", array.reduce((acc,element) => acc + createElLi(element),'')\n//     )\n\n\n\n// const BASE_URL = ''\n// const getUsers = () =>{\n//   return fetch('${BASE_URL}/users').then((response) =>response.json())\n// }\n// const getUserBtn = document.createElement('button')\n// getUsersBtn.textContent =  \"Get all users\"\n// main.append(getUsersBtn)\n\n// getUsersBtn.addEventListener('click', handleClick)\n// function handleClick() {\n//   getUsers().then((users) => console.log(users))\n\n// }\n\n// function createUserInfo({name, email, phone}){\n//   return\n//   <li>\n// <h3>${name}</h3>\n// <p>${email}</p>\n// <p>${phone}</p>\n//   </li>\n// }\n// function createUserToList(users){\n// const template = users.map((user) => createUserInfo(user)).join('')\n// addUserToList(template)\n// }"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","obj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.7cb37965.js.map"}